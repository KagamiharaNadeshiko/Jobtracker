---
description:
globs:
alwaysApply: false
---
# 数据可视化系统

本项目实现了丰富的数据可视化功能，帮助用户直观地了解求职申请的状态分布和趋势变化。

## 核心文件

- 状态饼图组件: [client/src/components/charts/StatusPieChart.tsx](mdc:client/src/components/charts/StatusPieChart.tsx)
- 月度柱状图组件: [client/src/components/charts/MonthlyBarChart.tsx](mdc:client/src/components/charts/MonthlyBarChart.tsx)
- 仪表盘页面: [client/src/pages/Dashboard.tsx](mdc:client/src/pages/Dashboard.tsx)

## 可视化组件

1. **StatusPieChart (申请状态分布)**:
   - 展示不同申请状态的职位数量分布
   - 支持自定义颜色和标题
   - 包含百分比与数量显示
   - 交互式图例和提示

2. **MonthlyBarChart (月度申请数据)**:
   - 展示每月职位申请、面试和收到Offer的数量
   - 多系列数据对比展示
   - 支持悬停查看详细数据
   - 响应式设计适配不同屏幕尺寸

3. **统计卡片**:
   - 总申请数量
   - 进行中的申请数量
   - 面试阶段数量
   - 收到Offer数量
   - 拒绝数量

## 数据处理

Dashboard页面实现了以下数据处理功能:
- 从API获取职位数据
- 按申请状态分类统计
- 计算申请成功率
- 构建按月份聚合的统计数据
- 提取最近更新的职位记录

## 使用Recharts库

该项目使用Recharts库实现数据可视化，具有以下特点:
- 基于React组件的声明式API
- 响应式设计
- 自定义样式与交互
- 支持多种图表类型

## 最佳实践

1. **数据优化**:
   - 通过后端API聚合数据，减少前端计算
   - 缓存常用统计数据，提高加载速度

2. **UI/UX考虑**:
   - 使用直观的颜色编码区分不同状态
   - 提供适当的空数据状态提示
   - 保持视觉一致性
   - 响应式设计适应不同设备
