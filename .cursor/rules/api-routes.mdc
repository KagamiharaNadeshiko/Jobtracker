---
description: 
globs: 
alwaysApply: false
---
# API 路由与集成

本系统同时包含两种API实现方式：
1. Express后端API (传统RESTful API)
2. MongoDB Atlas App Services后端函数 (无服务器函数)

## 远程API环境

**重要：项目API采用完全远程部署模式，不依赖本地调试。**

远程API特点：
1. 所有API端点通过App Services Hosting部署
2. 使用Atlas Functions作为无服务器函数
3. API测试通过CI/CD流水线执行
4. 通过Atlas提供的URL访问API
5. API状态和日志通过Atlas控制台监控

## Express API路由

以下是主要的Express API路由设计：

### 用户认证

- 路由文件: [server/routes/users.js](mdc:server/routes/users.js)
- 用户注册: `POST /api/users`
- 获取当前用户: `GET /api/users/me`

### 行业管理

- 路由文件: [server/routes/industries.js](mdc:server/routes/industries.js)
- 获取所有行业: `GET /api/industries`
- 创建行业: `POST /api/industries`
- 更新行业: `PUT /api/industries/:id`
- 删除行业: `DELETE /api/industries/:id`

### 公司管理

- 路由文件: [server/routes/companies.js](mdc:server/routes/companies.js)
- 获取所有公司: `GET /api/companies`
- 按行业获取公司: `GET /api/companies/industry/:industryId`
- 创建公司: `POST /api/companies`
- 更新公司: `PUT /api/companies/:id`
- 删除公司: `DELETE /api/companies/:id`

### 职位管理

- 路由文件: [server/routes/positions.js](mdc:server/routes/positions.js)
- 获取所有职位: `GET /api/positions`
- 按公司获取职位: `GET /api/positions/company/:companyId`
- 创建职位: `POST /api/positions`
- 更新职位: `PUT /api/positions/:id`
- 删除职位: `DELETE /api/positions/:id`

### 申请文书管理

- 路由文件: [server/routes/essays.js](mdc:server/routes/essays.js)
- 按职位获取文书: `GET /api/essays/position/:positionId`
- 创建文书: `POST /api/essays`
- 更新文书: `PUT /api/essays/:id`
- 删除文书: `DELETE /api/essays/:id`

### 网测管理

- 路由文件: [server/routes/onlinetests.js](mdc:server/routes/onlinetests.js)
- 按职位获取网测: `GET /api/online-tests/position/:positionId`
- 创建网测: `POST /api/online-tests`
- 更新网测: `PUT /api/online-tests/:id`
- 删除网测: `DELETE /api/online-tests/:id`

### 面试管理

- 路由文件: [server/routes/interviews.js](mdc:server/routes/interviews.js)
- 按职位获取面试: `GET /api/interviews/position/:positionId`
- 创建面试: `POST /api/interviews`
- 更新面试: `PUT /api/interviews/:id`
- 删除面试: `DELETE /api/interviews/:id`

## MongoDB Atlas App Services函数

以下是MongoDB Atlas App Services中定义的关键后端函数:

### 行业相关

- 获取用户的行业: [app_config/functions/getIndustriesByUser.js](mdc:app_config/functions/getIndustriesByUser.js)
- 创建行业: [app_config/functions/createIndustry.js](mdc:app_config/functions/createIndustry.js)

### 公司相关

- 按行业获取公司: [app_config/functions/getCompaniesByIndustry.js](mdc:app_config/functions/getCompaniesByIndustry.js)
- 创建公司: [app_config/functions/createCompany.js](mdc:app_config/functions/createCompany.js)

### 职位相关

- 创建职位: [app_config/functions/createPosition.js](mdc:app_config/functions/createPosition.js)

### 统计数据

- 获取仪表盘统计数据: [app_config/functions/getDashboardStats.js](mdc:app_config/functions/getDashboardStats.js)

## 认证中间件

保护路由的认证中间件: [server/middleware/auth.js](mdc:server/middleware/auth.js)

## 远程API调试

由于项目不进行本地调试，请使用以下方法调试API：

1. 使用MongoDB Atlas日志查看器监控API调用
2. 通过App Services调试控制台检查函数执行
3. 使用Postman或其他API客户端向远程端点发送请求
4. 查看GitHub Actions工作流中的API测试结果
5. 在Atlas控制台的网络分析中监控API流量
